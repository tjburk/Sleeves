# Generated by Django 4.2.dev20220912115206 on 2023-11-02 02:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('filter_media', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('genre_id', models.AutoField(primary_key=True, serialize=False)),
                ('genre_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'genre',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('spotify_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('overall_rating', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'media',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SleevesUser',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('first', models.CharField(blank=True, max_length=40, null=True)),
                ('middle', models.CharField(blank=True, max_length=40, null=True)),
                ('last', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'sleeves_user',
                'managed': False,
            },
        ),
        migrations.AlterModelOptions(
            name='artist',
            options={'managed': False},
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('album', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='filter_media.media')),
                ('album_type', models.CharField(blank=True, max_length=200, null=True)),
                ('album_art', models.CharField(blank=True, max_length=200, null=True)),
                ('record_label', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'album',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('episode', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='filter_media.media')),
                ('release_date', models.DateField(blank=True, null=True)),
                ('synopsis', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'episode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MediaHasGenre',
            fields=[
                ('media', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='filter_media.media')),
            ],
            options={
                'db_table': 'media_has_genre',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Podcast',
            fields=[
                ('podcast', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='filter_media.media')),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('producer', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'podcast',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='filter_media.sleevesuser')),
                ('title', models.CharField(max_length=40)),
                ('star_rating', models.FloatField(blank=True, null=True)),
                ('text', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'review',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('song', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='filter_media.media')),
                ('tempo', models.IntegerField(blank=True, null=True)),
                ('song_key', models.CharField(blank=True, max_length=200, null=True)),
                ('loudness', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'song',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spotify',
            fields=[
                ('spotify', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='filter_media.media')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('length', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'spotify',
                'managed': False,
            },
        ),
    ]
